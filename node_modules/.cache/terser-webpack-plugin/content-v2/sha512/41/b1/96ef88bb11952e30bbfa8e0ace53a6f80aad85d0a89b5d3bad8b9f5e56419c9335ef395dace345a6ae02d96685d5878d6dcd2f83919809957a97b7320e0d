{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{814:function(s,n,a){\"use strict\";a.r(n);var t=a(1),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[a(\"h3\",{attrs:{id:\"一、数据传输指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、数据传输指令\"}},[s._v(\"#\")]),s._v(\" 一、数据传输指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"它们在存贮器和寄存器、寄存器和输入输出端口之间传送数据.  \\n1. 通用数据传送指令.  \\n    MOV     传送字或字节.  \\n    MOVSX   先符号扩展,再传送.  \\n    MOVZX   先零扩展,再传送.  \\n    PUSH    把字压入堆栈.  \\n    POP     把字弹出堆栈.  \\n    PUSHA   把AX,CX,DX,BX,SP,BP,SI,DI依次压入堆栈.  \\n    POPA    把DI,SI,BP,SP,BX,DX,CX,AX依次弹出堆栈.  \\n    PUSHAD  把EAX,ECX,EDX,EBX,ESP,EBP,ESI,EDI依次压入堆栈.  \\n    POPAD   把EDI,ESI,EBP,ESP,EBX,EDX,ECX,EAX依次弹出堆栈.  \\n    BSWAP   交换32位寄存器里字节的顺序  \\n    XCHG    交换字或字节.(至少有一个操作数为寄存器,段寄存器不可作为操作数)  \\n    CMPXCHG 比较并交换操作数.(第二个操作数必须为累加器AL/AX/EAX)  \\n    XADD    先交换再累加.(结果在第一个操作数里)  \\n    XLAT    字节查表转换.----BX指向一张256字节的表的起点,AL为表的索引值(0-255,即0-FFH);返回AL为查表结果.([BX+AL]->AL)  \\n2. 输入输出端口传送指令.  \\n    IN      I/O端口输入. ( 语法: IN   累加器,    {端口号│DX} )  \\n    OUT     I/O端口输出. ( 语法: OUT {端口号│DX},累加器 )输入输出端口由立即方式指定时,    其范围是 0-255; 由寄存器 DX 指定时,其范围是    0-65535.  \\n3. 目的地址传送指令.  \\n    LEA     装入有效地址.例: LEA DX,string ;把偏移地址存到DX.  \\n    LDS     传送目标指针,把指针内容装入DS.例: LDS SI,string   ;把段地址:偏移地址存到DS:SI.  \\n    LES     传送目标指针,把指针内容装入ES.例: LES DI,string   ;把段地址:偏移地址存到ES:DI.  \\n    LFS     传送目标指针,把指针内容装入FS.例: LFS DI,string   ;把段地址:偏移地址存到FS:DI.  \\n    LGS     传送目标指针,把指针内容装入GS.例: LGS DI,string   ;把段地址:偏移地址存到GS:DI.  \\n    LSS     传送目标指针,把指针内容装入SS.例: LSS DI,string   ;把段地址:偏移地址存到SS:DI.  \\n4. 标志传送指令.  \\n    LAHF    标志寄存器传送,把标志装入AH.  \\n    SAHF    标志寄存器传送,把AH内容装入标志寄存器.  \\n    PUSHF   标志入栈.  \\n    POPF    标志出栈.  \\n    PUSHD   32位标志入栈.  \\n    POPD    32位标志出栈.  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[a(\"strong\",[s._v(\"二、算术运算指令\")])]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"加减法运算对无符号数和有符号数的处理一视同仁。即作为无符号数而影响标志位CF和AF，也作为有符号数影响标识OF和SF，且总会影响ZF。加减法运算指令也要影响标志位PF。有些指令稍有例外。\\n存放运算结果的操作数（两个操作数时即左操作数）只能是通用寄存器或存储单元（变量）。如果参与运算的操作数有两个，则最多只能有一个是存储器操作数。\\n如果参与运算的操作数有两个，则它们的类型必须一致，如同时为字节或同时为字等。\\n1、加法指令：add、adc、inc\\n\\n(1) add(Addtion)\\n    格式：add OPRD1,OPRD2\\n    功能：OPRD1 = OPRD1 + OPRD2\\n    注：  影响FLAG\\n \\n    如：add al,5\\n           add bl,var        ;var是字节变量\\n           add var,si        ;var是字变量\\n \\n(2) adc(add with Carry)        ;带进位的加法\\n    格式：adc OPRD1,OPRD2\\n    功能：带进位的加法，OPRD1 = OPRD1 + OPRD2 + CF\\n    注：    影响FLAG，主要用于多字节运算\\n \\n    如：    adc al,[bx]\\n         adc dx,ax\\n         adc dx,var        ;var是字变量\\n \\n(3) inc(Increment)\\n    格式：inc OPRD\\n    功能：OPRD = OPRD + 1\\n    注： 不影响CF\\n \\n    如：inc al\\n        inc var            ;var是字节变量，也可以是字变量\\n        inc cx\\n2、减法指令：sub、sbb、dec、neg、cmp\\n\\n(1) sub(Subtraction)\\n    格式：sub OPRD1，OPRD2\\n    功能：OPRD1 = OPRD1 - OPRD2\\n \\n    如：  sub ah,12\\n         sub bx,bp\\n         sub al,[bx]\\n         sub [BP],AX\\n         sub AX,VAR        ;VAR是字变量\\n \\n(2) sbb(Sub with Borrow)\\n    格式：sbb OPRD1,OPRD2\\n    功能：OPRD1 = OPRD1 - OPRD2 - CF\\n    注：    主要用于多字节数相减的情况\\n \\n(3) dec(decrement)\\n    格式：dec OPRD\\n    功能：OPRD = OPRD - 1\\n    注：    操作数OPRD可以是通用寄存器，也可以是存储单元。相减时把操作数作为一个无符号数对待，这条指令影响ZF、SP、OF、PF、AF，但不影响CF，该指令主要用于调整地址指针和计数器。\\n \\n(4) neg(Negate)\\n    格式：NEG OPRD\\n    功能：对操作数取补，即OPRD = 0 - OPRD\\n    注： 操作数可以是通用寄存器，也可以是存储单元。此指令结果影响CF、ZF、OF、AF、PF，一般会使CF为1，除非OPRD=0\\n \\n(5)    cmp(Compare)\\n    格式：cmp OPRD1,OPRD2\\n    功能：执行OPRD1 - OPRD2，但运算结果不运送到OPRD1\\n    注：    该指令通过OPRD - OPRD2影响标志位CF、ZF、SF、OF、AF、PF来判断OPRD1和OPRD2的大小关系。通过ZF判断是否相等；如果是无符号数，通过CF可判断大小；如果是有符号数，通过SF和OF判断大小\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"49\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"50\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"51\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"52\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"53\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"54\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"55\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"56\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"57\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"58\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"59\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"60\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"61\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"62\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"    ADD     加法.  \\n    ADC     带进位加法.  \\n    INC     加 1.  \\n    AAA     加法的ASCII码调整.  \\n    DAA     加法的十进制调整.  \\n    SUB     减法.  \\n    SBB     带借位减法.  \\n    DEC     减 1.  \\n    NEG     求反(以    0 减之).  \\n    CMP     比较.(两操作数作减法,仅修改标志位,不回送结果).  \\n    AAS     减法的ASCII码调整.  \\n    DAS     减法的十进制调整.  \\n    MUL     无符号乘法.结果回送AH和AL(字节运算),或DX和AX(字运算),  \\n    IMUL    整数乘法.结果回送AH和AL(字节运算),或DX和AX(字运算),  \\n    AAM     乘法的ASCII码调整.  \\n    DIV     无符号除法.结果回送:商回送AL,余数回送AH, (字节运算);或 商回送AX,余数回送DX, (字运算).  \\n    IDIV    整数除法.结果回送:商回送AL,余数回送AH, (字节运算);或 商回送AX,余数回送DX, (字运算).  \\n    AAD     除法的ASCII码调整.  \\n    CBW     字节转换为字. (把AL中字节的符号扩展到AH中去)  \\n    CWD     字转换为双字. (把AX中的字的符号扩展到DX中去)  \\n    CWDE    字转换为双字. (把AX中的字符号扩展到EAX中去)  \\n    CDQ     双字扩展. (把EAX中的字的符号扩展到EDX中去)  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、乘法指令：mul、imul\\n\\n(1) mul(Multiply)            ;无符号数乘法指令\\n    格式：MUL OPRD\\n    功能：将OPRD与AX或AL中的操作数相乘，结果保存在DX:AX中或AX中\\n    注： 无符号数相乘分为16位*16位和8位*8位，结果分别为32位和16位，保存在DX:AX中或AX中，其中结果为32位时，DX为高16位，AX为低16位；结果为16位时，AH为高8位，AL为低8位。\\n(2) imul(Signed Multiply)    ;有符号数乘法指令\\n    格式：IMUL OPRD\\n    功能：把乘数和被乘数均作为有符号数进行乘法运算。其余与mul类似\\n    注：    如果乘积结果的高位部分（DX或AH）不是低位的符号扩展，则CF=1，OF=1，否则CF=0，OF=0。即CF=1，OF=1表示AH或DX中含有结果的有效数。\\n         如果除数为0，或8位数除时商超过8位，16位数除时商超过16位，则认为是除溢出，引起0号中断。除法指令对标志位的影响无定义。\\n2、除法指令：div、idiv\\n\\n(1) div(Division)            ;无符号数除法指令\\n    格式：DIV OPRD\\n    功能：OPRD为除数，被除数存放在DX:AX或AX中，做除法，结果存放在DX:AX（DX存放余数，AX存放商）或AX（AH余数，AL商）。\\n    注：    8086中除法有32位除以16位和16位除以8位。前者被除数为32位，高位在DX中，低位在AX中，除数OPRD为16位通用寄存器或16位存储器操作数，结果为16位，其中16位余数存放在DX中，16位商存放在AX中；若为16位除以8位，被除数存放在AX中，OPRD为8位通用寄存器或存储器操作数，结果8位余数存放在AH中，8位商存放在AL中。\\n \\n(2) idiv(Signed Division)    ;有符号数除法指令\\n    格式：IDIV OPRD\\n    功能：把除数和被除数看做有符号数做除法，其余与div类似\\n3、符号扩展指令：cbw、cwd\\n\\n(1) cbw(Convert Byte to Word)\\n    格式：CBW\\n    功能：把寄存器AL中的符号位扩展到寄存器AH\\n(2) cwd(Convert Word to Double Word)\\n    格式：CWD\\n    功能：把寄存器AX中的符号扩展到寄存器DX\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"三、逻辑运算指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、逻辑运算指令\"}},[s._v(\"#\")]),s._v(\" 三、逻辑运算指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、乘法指令：mul、imul\\n\\n(1) mul(Multiply)            ;无符号数乘法指令\\n    格式：MUL OPRD\\n    功能：将OPRD与AX或AL中的操作数相乘，结果保存在DX:AX中或AX中\\n    注： 无符号数相乘分为16位*16位和8位*8位，结果分别为32位和16位，保存在DX:AX中或AX中，其中结果为32位时，DX为高16位，AX为低16位；结果为16位时，AH为高8位，AL为低8位。\\n(2) imul(Signed Multiply)    ;有符号数乘法指令\\n    格式：IMUL OPRD\\n    功能：把乘数和被乘数均作为有符号数进行乘法运算。其余与mul类似\\n    注：    如果乘积结果的高位部分（DX或AH）不是低位的符号扩展，则CF=1，OF=1，否则CF=0，OF=0。即CF=1，OF=1表示AH或DX中含有结果的有效数。\\n         如果除数为0，或8位数除时商超过8位，16位数除时商超过16位，则认为是除溢出，引起0号中断。除法指令对标志位的影响无定义。\\n2、除法指令：div、idiv\\n\\n(1) div(Division)            ;无符号数除法指令\\n    格式：DIV OPRD\\n    功能：OPRD为除数，被除数存放在DX:AX或AX中，做除法，结果存放在DX:AX（DX存放余数，AX存放商）或AX（AH余数，AL商）。\\n    注：    8086中除法有32位除以16位和16位除以8位。前者被除数为32位，高位在DX中，低位在AX中，除数OPRD为16位通用寄存器或16位存储器操作数，结果为16位，其中16位余数存放在DX中，16位商存放在AX中；若为16位除以8位，被除数存放在AX中，OPRD为8位通用寄存器或存储器操作数，结果8位余数存放在AH中，8位商存放在AL中。\\n \\n(2) idiv(Signed Division)    ;有符号数除法指令\\n    格式：IDIV OPRD\\n    功能：把除数和被除数看做有符号数做除法，其余与div类似\\n3、符号扩展指令：cbw、cwd\\n\\n(1) cbw(Convert Byte to Word)\\n    格式：CBW\\n    功能：把寄存器AL中的符号位扩展到寄存器AH\\n(2) cwd(Convert Word to Double Word)\\n    格式：CWD\\n    功能：把寄存器AX中的符号扩展到寄存器DX\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"    AND     与运算.  \\n    OR      或运算.  \\n    XOR     异或运算.  \\n    NOT     取反.  \\n    TEST    测试.(两操作数作与运算,仅修改标志位,不回送结果).  \\n    SHL     逻辑左移.  \\n    SAL     算术左移.(=SHL)  \\n    SHR     逻辑右移.  \\n    SAR     算术右移.(=SHR)  \\n    ROL     循环左移.  \\n    ROR     循环右移.  \\n    RCL     通过进位的循环左移.  \\n    RCR     通过进位的循环右移.  \\n              以上八种移位指令,其移位次数可达255次.  \\n              移位一次时, 可直接用操作码. 如 SHL AX,1.  \\n              移位>1次时, 则由寄存器CL给出移位次数.  \\n              如 MOV CL,04   SHL AX,CL  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"四、串指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、串指令\"}},[s._v(\"#\")]),s._v(\" 四、串指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"    DS:SI 源串段寄存器 :源串变址.  \\n    ES:DI 目标串段寄存器:目标串变址.  \\n    CX 重复次数计数器.  \\n    AL/AX 扫描值.  \\n    D标志   0表示重复操作中SI和DI应自动增量; 1表示应自动减量.  \\n    Z标志   用来控制扫描或比较操作的结束.  \\n    MOVS    串传送.( MOVSB 传送字符. MOVSW 传送字. MOVSD 传送双字. )  \\n    CMPS    串比较.( CMPSB 比较字符. CMPSW 比较字. )  \\n    SCAS    串扫描.把AL或AX的内容与目标串作比较,比较结果反映在标志位.  \\n    LODS    装入串.把源串中的元素(字或字节)逐一装入AL或AX中.( LODSB 传送字符. LODSW 传送字.    LODSD 传送双字. )  \\n    STOS    保存串.是LODS的逆过程.  \\n    REP         当CX/ECX<>0时重复.  \\n    REPE/REPZ   当ZF=1或比较结果相等,且CX/ECX<>0时重复.  \\n    REPNE/REPNZ 当ZF=0或比较结果不相等,且CX/ECX<>0时重复.  \\n    REPC        当CF=1且CX/ECX<>0时重复.  \\n    REPNC       当CF=0且CX/ECX<>0时重复.  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"五、程序转移指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、程序转移指令\"}},[s._v(\"#\")]),s._v(\" \"),a(\"strong\",[s._v(\"五、程序转移指令\")])]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、无条件转移指令：JMP(Jump)\\n\\n段内转移：改变IP\\n段间转移：改变CS:IP\\n\\n(1) 无条件段内直接转移指令\\n    格式：JMP 标号\\n    功能：使控制无条件转移至标号地址处\\n    原理：把编译时计算出的地址差加到IP上\\n(2) 无条件段内间接转移指令\\n    格式：JMP OPRD\\n    功能：使控制指令无条件转移到OPRD的内容给定的目标地址处。操作数OPRD可以是通用寄存器，也可以是字存储单元\\n    例如：jmp cx                    ;CX寄存器的内容送IP\\n         jmp word ptr [1234h]    ;字存储单元[1234h]的内容送IP\\n(3) 无条件段间直接转移指令\\n    格式：jmp far ptr 标号\\n    功能：使控制指令无条件的转移到标号对应的地址处\\n    原理：把编译时产生的标号处的段地址和偏移地址分别置入CS和IP\\n(4) 无条件段间间接转移指令\\n    格式：JMP OPRD\\n    功能：使控制指令无条件转移到操作数OPRD的内容给定的目标地址处。操作数OPRD必须是双字存储单元\\n    例如：jmp dword ptr [1234h]    ;双字存储单元的低字内容送IP，高字内容送CS\\n2、条件转移指令\\n\\n\\n\\n3、循环指令：LOOP、LOOPE/LOOPZ、LOOPNE/LOOPNZ、JCXZ\\n\\n(1) Loop            ;计数循环指令\\n    格式：loop 标号\\n    功能：使转移标号与Loop指令间的指令循环执行CX次\\n    原理：指令执行至loop时，cx减1，如果cx不为0，则跳转至标号处，否则继续执行下一条指令\\n        即：DEC CX\\n           JNZ 标号\\n \\n(2) LOOPE/LOOPZ        ;等于/全零循环指令\\n    格式：LOOPE 标号\\n         LOOPZ 标号\\n    功能：该指令使CX自减1，若结果不为0，并且ZF=1，则转移至标号，否则顺序执行。注意指令本身实施的CX自减1操作不影响标志\\n \\n(3) LOOPNE/LOOPNZ    ;不等于/非零循环指令\\n    格式：LOOPNE 标号\\n         LOOPNZ 标号\\n    功能：该指令使CX自减1，若结果不为0，并且ZF=0，则转移至标号，否则顺序执行。注意指令本身实施的CX自减1操作不影响标志\\n \\n(4) JCXZ            ;跳转指令\\n    格式：JCXZ 标号\\n    功能：当寄存器CX的值为0时跳转到标号，否则顺序执行\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v('1. 无条件转移指令 (长转移)  \\n    JMP         无条件转移指令  \\n    CALL        过程调用  \\n    RET/RETF    过程返回.  \\n2. 条件转移指令   (短转移,-128到+127的距离内)( 当且仅当(SF XOR OF)=1时,OP1<OP2 )  \\n    JA/JNBE     不小于或不等于时转移.  \\n    JAE/JNB     大于或等于转移.  \\n    JB/JNAE     小于转移.  \\n    JBE/JNA     小于或等于转移.  \\n        以上四条,测试无符号整数运算的结果(标志C和Z).  \\n    JG/JNLE     大于转移.  \\n    JGE/JNL     大于或等于转移.  \\n    JL/JNGE     小于转移.  \\n    JLE/JNG     小于或等于转移.  \\n        以上四条,测试带符号整数运算的结果(标志S,O和Z).  \\n    JE/JZ       等于转移.  \\n    JNE/JNZ     不等于时转移.  \\n    JC          有进位时转移.  \\n    JNC         无进位时转移.  \\n    JNO         不溢出时转移.  \\n    JNP/JPO     奇偶性为奇数时转移.  \\n    JNS         符号位为 \"0\" 时转移.  \\n    JO          溢出转移.  \\n    JP/JPE      奇偶性为偶数时转移.  \\n    JS          符号位为 \"1\" 时转移.  \\n3. 循环控制指令(短转移)  \\n    LOOP            CX不为零时循环.  \\n    LOOPE/LOOPZ     CX不为零且标志Z=1时循环.  \\n    LOOPNE/LOOPNZ   CX不为零且标志Z=0时循环.  \\n    JCXZ            CX为零时转移.  \\n    JECXZ           ECX为零时转移.  \\n4. 中断指令  \\n    INT         中断指令  \\n    INTO        溢出中断  \\n    IRET        中断返回  \\n5. 处理器控制指令  \\n    HLT         处理器暂停,  直到出现中断或复位信号才继续.  \\n    WAIT        当芯片引线TEST为高电平时使CPU进入等待状态.  \\n    ESC         转换到外处理器.  \\n    LOCK        封锁总线.  \\n    NOP         空操作.  \\n    STC         置进位标志位.  \\n    CLC         清进位标志位.  \\n    CMC         进位标志取反.  \\n    STD         置方向标志位.  \\n    CLD         清方向标志位.  \\n    STI         置中断允许位.  \\n    CLI         清中断允许位.  \\n')])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"六、伪指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#六、伪指令\"}},[s._v(\"#\")]),s._v(\" 六、伪指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"    DW          定义字(2字节).  \\n    PROC        定义过程.  \\n    ENDP        过程结束.  \\n    SEGMENT     定义段.  \\n    ASSUME      建立段寄存器寻址.  \\n    ENDS        段结束.  \\n    END         程序结束.  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"七、处理机控制指令-标志处理指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#七、处理机控制指令-标志处理指令\"}},[s._v(\"#\")]),s._v(\" \"),a(\"strong\",[s._v(\"七、处理机控制指令：标志处理指令\")])]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、标志传送指令：LAHF(Load AH with Flags)、SAHF(Store AH into Flags)、PUSHF、POPF\\n\\n(1) LAHF(Load AH with Flags)\\n    格式：LAHF\\n    功能：把标志寄存器的低8位（包括SF(7)、ZF(6)、AF(4)、PF(2)、CF(0)）传送到AH指定位。\\n(2) SAHF(Store AH into Flags)\\n    格式：SAHF\\n    功能：把寄存器AH的指定位送至标志寄存器低8位（包括SF(7)、ZF(6)、AF(4)、PF(2)、CF(0)）。\\n(3) PUSHF\\n    格式：PUSHF\\n    功能：把标志寄存器的内容（16位）压入堆栈。SP-=2\\n    注： 这条指令不影响标志位\\n(4) POPF\\n    格式：POPF\\n    功能：把当前栈顶的一个字传送到标志寄存器。SP+=2\\n2、标志位操作指令：CLC、STC、CMC、CLD、STD、CLI、STI\\n\\n(1) CLC(Clear Carry Flag):                CF置0\\n(2) STC(Set Carry Flag):                CF置1\\n \\n(3) CMC(Complement Carry Flag):            CF取反\\n \\n(4) CLD(Clear Direction Flag):            DF置0，执行串操作指令时，地址递增\\n(5) STD(Set Direction Flag):            DF置1，执行串操作指令时，地址递减\\n \\n(6) CLI(Clear Interrupt enable Flag)    IF置0，使CPU不响应来自外部装置的可屏蔽中断，但对不可屏蔽中断和内部中断没有影响\\n(7) STI(Set Interrupt enable Flag)        IF置1，可以响应可屏蔽中断\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"    CLC     进位位置0指令  \\n    CMC     进位位求反指令  \\n    STC     进位位置为1指令  \\n    CLD     方向标志置1指令  \\n    STD     方向标志位置1指令  \\n    CLI     中断标志置0指令  \\n    STI     中断标志置1指令  \\n    NOP     无操作  \\n    HLT     停机  \\n    WAIT    等待  \\n    ESC     换码  \\n    LOCK    封锁 \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h2\",{attrs:{id:\"浮点运算指令集\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浮点运算指令集\"}},[s._v(\"#\")]),s._v(\" 浮点运算指令集\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"一、控制指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一、控制指令\"}},[s._v(\"#\")]),s._v(\" 一、控制指令\")]),s._v(\" \"),a(\"p\",[s._v(\"(带9B的控制指令前缀F变为FN时浮点不检查，机器码去掉9B)\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"FINIT                 初始化浮点部件                  机器码  9B DB E3  \\nFCLEX                 清除异常                         机器码  9B DB E2  \\nFDISI                 浮点检查禁止中断                 机器码  9B DB E1  \\nFENI                  浮点检查禁止中断二            机器码  9B DB E0  \\nWAIT                  同步CPU和FPU                    机器码  9B  \\nFWAIT                 同步CPU和FPU                    机器码  D9 D0  \\nFNOP                  无操作                          机器码  DA E9  \\nFXCH                  交换ST(0)和ST(1)                机器码  D9 C9  \\nFXCH ST(i)            交换ST(0)和ST(i)                机器码  D9 C1iii  \\nFSTSW ax              状态字到ax                       机器码  9B DF E0  \\nFSTSW   word ptr mem  状态字到mem                      机器码  9B DD mm111mmm  \\nFLDCW   word ptr mem  mem到状态字                      机器码  D9 mm101mmm  \\nFSTCW   word ptr mem  控制字到mem                      机器码  9B D9 mm111mmm  \\n  \\nFLDENV  word ptr mem  mem到全环境                      机器码  D9 mm100mmm  \\nFSTENV  word ptr mem  全环境到mem                      机器码  9B D9 mm110mmm  \\nFRSTOR  word ptr mem  mem到FPU状态                    机器码  DD mm100mmm  \\nFSAVE   word ptr mem  FPU状态到mem                    机器码  9B DD mm110mmm  \\n  \\nFFREE ST(i)           标志ST(i)未使用                   机器码  DD C0iii  \\nFDECSTP               减少栈指针1->0 2->1             机器码  D9 F6  \\nFINCSTP               增加栈指针0->1 1->2             机器码  D9 F7  \\nFSETPM                浮点设置保护                       机器码  DB E4  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"二、数据传送指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二、数据传送指令\"}},[s._v(\"#\")]),s._v(\" 二、数据传送指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、传送指令：MOV (move)\\n\\n格式：mov dst,src\\n具体用法：\\n\\n(1) CPU内部寄存器之间的数据传送，如：mov ah,al\\n \\n(2) 立即数送至通用寄存器(非段寄存器)或存储单元，如:mov al,3        mov [bx],1234h\\n \\n(3) 寄存器与存储器间的数据传送，如：mov ax,var        mov ax,[bx]\\n\\n2、交换指令：XCHG\\n\\nxchg OPRD1,OPRD2    ;OPRD可以是通用寄存器或存储单元，但不包括段寄存器，不能同时是存储单元，不能有立即数\\n3、地址传送指令：LEA、LDS、LES\\n\\n(1) LEA(Load Effective Address)\\n    格式：   lea REG,OPRD        \\n    功能：   把操作数OPRD的有效地址传送到操作数REG\\n     注：    REG必须是16位通用寄存器，OPRD必须是一个存储器操作数\\n     如：    lea ax,buf            ;buf是变量名\\n            lea ax,[si+2]\\n(2) LDS(Load pointer into DS)\\n    格式：   lds REG,OPRD        \\n    功能：   传送32位地址指针，将OPRD存储的32位数的高16位（段地址）送至DS，低16位（偏移地址）送至REG。（注意OPRD存放的32位数据，不是OPRD本身的地址）\\n     注：    操作数OPRD必须是一个32位存储器操作数，操作数REG可以时16位通用寄存器，但通常是指令指针寄存器（IP）或变址寄存器（SI，DI，SP，BP）\\n \\n     如：       lds di,[bx]\\n            lds si,FARPOINTER      ;FARPOINTER是一个32位（双字）变量\\n(3) LES(Load pointer into ES)\\n    格式：      les REG,OPRD\\n    功能：      把操作数OPRD存储的32位数据的高16位（段地址）送至ES，低16位（偏移地址）送至REG\\n    其他同LDS\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"FLDZ                  将0.0装入ST(0)                  机器码  D9 EE  \\nFLD1                  将1.0装入ST(0)                  机器码  D9 E8  \\nFLDPI                 将π装入ST(0)                    机器码  D9 EB  \\nFLDL2T                将ln10/ln2装入ST(0)             机器码  D9 E9  \\nFLDL2E                将1/ln2装入ST(0)                机器码  D9 EA  \\nFLDLG2                将ln2/ln10装入ST(0)             机器码  D9 EC  \\nFLDLN2                将ln2装入ST(0)                  机器码  D9 ED  \\n  \\nFLD    real4 ptr mem  装入mem的单精度浮点数             机器码  D9 mm000mmm  \\nFLD    real8 ptr mem  装入mem的双精度浮点数             机器码  DD mm000mmm  \\nFLD   real10 ptr mem  装入mem的十字节浮点数             机器码  DB mm101mmm  \\n  \\nFILD    word ptr mem  装入mem的二字节整数              机器码  DF mm000mmm  \\nFILD   dword ptr mem  装入mem的四字节整数              机器码  DB mm000mmm  \\nFILD   qword ptr mem  装入mem的八字节整数              机器码  DF mm101mmm  \\n  \\nFBLD   tbyte ptr mem  装入mem的十字节BCD数            机器码  DF mm100mmm  \\n  \\nFST    real4 ptr mem  保存单精度浮点数到mem             机器码  D9 mm010mmm  \\nFST    real8 ptr mem  保存双精度浮点数到mem             机器码  DD mm010mmm  \\n  \\nFIST    word ptr mem  保存二字节整数到mem              机器码  DF mm010mmm  \\nFIST   dword ptr mem  保存四字节整数到mem              机器码  DB mm010mmm  \\n  \\nFSTP   real4 ptr mem  保存单精度浮点数到mem并出栈      机器码  D9 mm011mmm  \\nFSTP   real8 ptr mem  保存双精度浮点数到mem并出栈      机器码  DD mm011mmm  \\nFSTP  real10 ptr mem  保存十字节浮点数到mem并出栈      机器码  DB mm111mmm  \\n  \\nFISTP   word ptr mem  保存二字节整数到mem并出栈           机器码  DF mm011mmm  \\nFISTP  dword ptr mem  保存四字节整数到mem并出栈           机器码  DB mm011mmm  \\nFISTP  qword ptr mem  保存八字节整数到mem并出栈           机器码  DF mm111mmm  \\n  \\nFBSTP  tbyte ptr mem  保存十字节BCD数到mem并出栈     机器码  DF mm110mmm  \\n  \\nFCMOVB                ST(0),ST(i) <时传送              机器码  DA C0iii  \\nFCMOVBE               ST(0),ST(i) <=时传送             机器码  DA D0iii  \\nFCMOVE                ST(0),ST(i) =时传送             机器码  DA C1iii  \\nFCMOVNB               ST(0),ST(i) >=时传送             机器码  DB C0iii  \\nFCMOVNBE              ST(0),ST(i) >时传送              机器码  DB D0iii  \\nFCMOVNE               ST(0),ST(i) !=时传送            机器码  DB C1iii  \\nFCMOVNU               ST(0),ST(i) 有序时传送        机器码  DB D1iii  \\nFCMOVU                ST(0),ST(i) 无序时传送        机器码  DA D1iii  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"三、比较指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三、比较指令\"}},[s._v(\"#\")]),s._v(\" 三、比较指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"FCOM                  ST(0)-ST(1)                      机器码  D8 D1  \\nFCOMI                 ST(0),ST(i)  ST(0)-ST(1)         机器码  DB F0iii  \\nFCOMIP                ST(0),ST(i)  ST(0)-ST(1)并出栈   机器码  DF F0iii  \\nFCOM   real4 ptr mem  ST(0)-实数mem                      机器码  D8 mm010mmm  \\nFCOM   real8 ptr mem  ST(0)-实数mem                      机器码  DC mm010mmm  \\n  \\nFICOM   word ptr mem  ST(0)-整数mem                      机器码  DE mm010mmm  \\nFICOM  dword ptr mem  ST(0)-整数mem                      机器码  DA mm010mmm  \\nFICOMP  word ptr mem  ST(0)-整数mem并出栈               机器码  DE mm011mmm  \\nFICOMP dword ptr mem  ST(0)-整数mem并出栈               机器码  DA mm011mmm  \\n  \\nFTST                  ST(0)-0                          机器码  D9 E4  \\nFUCOM  ST(i)          ST(0)-ST(i)                      机器码  DD E0iii  \\nFUCOMP ST(i)          ST(0)-ST(i)并出栈                   机器码  DD E1iii  \\nFUCOMPP               ST(0)-ST(1)并二次出栈             机器码  DA E9  \\nFXAM                  ST(0)规格类型                    机器码  D9 E5  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"四、运算指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四、运算指令\"}},[s._v(\"#\")]),s._v(\" 四、运算指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"FADD                  把目的操作数 (直接接在指令后的变量或堆栈缓存器) 与来源操作数 (接在目的操作数后的变量或堆栈缓存器)  相加，并将结果存入目的操作数  \\nFADDP  ST(i),ST       这个指令是使目的操作数加上 ST  缓存器，并弹出 ST 缓存器，而目的操作数必须是堆栈缓存器的其中之一，最后不管目的操作数为何，经弹出一次后，目的操作数会变成上一个堆栈缓存器了  \\nFIADD                 FIADD 是把 ST   加上来源操作数，然后再存入 ST 缓存器，来源操作数必须是字组整数或短整数形态的变数  \\n  \\nFSUB                  减  \\nFSUBP  \\nFSUBR                 减数与被减数互换  \\nFSUBRP  \\nFISUB  \\nFISUBR  \\n  \\nFMUL                  乘  \\nFMULP  \\nFIMUL  \\n  \\nFDIV                  除  \\nFDIVP  \\nFDIVR  \\nFDIVRP  \\nFIDIV  \\nFIDIVR  \\n  \\nFCHS                  改变 ST 的正负值  \\n  \\nFABS                  把 ST  之值取出，取其绝对值后再存回去。  \\n  \\nFSQRT                 将 ST  之值取出，开根号后再存回去。  \\n  \\nFSCALE                这个指令是计算 ST*2^ST(1)之值，再把结果存入 ST 里而 ST(1)   之值不变。ST(1)  必须是在 -32768 到 32768 (-215 到 215 )之间的整数，如果超过这个范围计算结果无法确定，如果不是整数 ST(1)    会先向零舍入成整数再计算。所以为安全起见，最好是由字组整数载入到 ST(1) 里。  \\n  \\nFRNDINT               这个指令是把 ST 的数值舍入成整数，FPU    提供四种舍入方式，由 FPU 的控制字组(control    word)中的 RC 两个位决定  \\n                          RC    舍入控制  \\n                          00    四舍五入  \\n                          01    向负无限大舍入  \\n                          10    向正无限大舍入  \\n                          11    向零舍去  \\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"h3\",{attrs:{id:\"五、堆栈操作指令\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五、堆栈操作指令\"}},[s._v(\"#\")]),s._v(\" 五、堆栈操作指令\")]),s._v(\" \"),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")]),s._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[s._v(\"1、进栈指令：push\\n\\n格式：push src\\n功能： 把16位数据src压入堆栈。\\n注： 源操作数src可以是通用寄存器和段寄存器，也可以是字存储单元\\n\\n如： push si\\npush [si]\\npush var ;var是16位（字）变量\\n2、出栈指令：pop\\n\\n格式：pop dst\\n功能：从堆栈弹出16位数据至dst\\n注： dst可以是通用寄存器和段寄存器，但不能是CS，可以是字存储单元\\n\\n如： pop si\\npop [si]\\npop var ;var是字变量\\n\")])]),s._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),a(\"br\")])]),a(\"p\",[s._v(\"[\"),a(\"img\",{attrs:{src:\"/assets/img/copycode.gif\",alt:\"复制代码\"}}),s._v(\"](javascript:void(0)😉\")])])}),[],!1,null,null,null);n.default=e.exports}}]);","extractedComments":[]}